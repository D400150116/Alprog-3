#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<math.h>
#include<conio.h>
int kerja();
void 4gelang();
void 5gelang();
void 6gelang();
void 4gelang()
{
struct gelang{
char gelang1[10];
char gelang2[10];
char gelang3[10];
char gelang4[10];
};
struct gelang baru[2];
printf("gelang1: ");
scanf("%s", &baru.gelang1);
printf("gelang2: ");
scanf("%s", &baru.gelang2);
printf("gelang3: ");
scanf("%s", &baru.gelang3);
printf("gelang4: ");
scanf("%s", &baru.gelang4);
printf("\n\n");
printf("data 4gelang:\n");
printf("gelang1: %s\n", baru.gelang1);
printf("gelang2: %s\n", baru.gelang2);
printf("gelang3: %s\n", baru.gelang3);
printf("gelang4: %s\n", baru.gelang4);
}
void 5gelang()
{
struct gelang{
char gelang1[10];
char gelang2[10];
char gelang3[10];
char gelang4[10];
char gelang5[10];
};
struct gelang baru[2];
printf("gelang1: ");
scanf("%s", &baru.gelang1);
printf("gelang2: ");
scanf("%s", &baru.gelang2);
printf("gelang3: ");
scanf("%s", &baru.gelang3);
printf("gelang4: ");
scanf("%s", &baru.gelang4);
printf("gelang5: ");
scanf("%s", &baru.gelang5);
printf("\n\n");
printf("data 5gelang:\n");
printf("gelang1: %s\n", baru.gelang1);
printf("gelang2: %s\n", baru.gelang2);
printf("gelang3: %s\n", baru.gelang3);
printf("gelang4: %s\n", baru.gelang4);
printf("gelang5: %s\n", baru.gelang5);
}
void 6gelang()
{
struct gelang{
char gelang1[10];
char gelang2[10];
char gelang3[10];
char gelang4[10];
char gelang5[10];
char gelang6[10];
};
struct gelang baru[2];
printf("gelang1: ");
scanf("%s", &baru.gelang1);
printf("gelang2: ");
scanf("%s", &baru.gelang2);
printf("gelang3: ");
scanf("%s", &baru.gelang3);
printf("gelang4: ");
scanf("%s", &baru.gelang4);
printf("gelang5: ");
scanf("%s", &baru.gelang5);
printf("gelang6: ");
scanf("%s", &baru.gelang6);
printf("\n\n");
printf("data 6gelang:\n");
printf("gelang1: %s\n", baru.gelang1);
printf("gelang2: %s\n", baru.gelang2);
printf("gelang3: %s\n", baru.gelang3);
printf("gelang4: %s\n", baru.gelang4);
printf("gelang5: %s\n", baru.gelang5);
printf("gelang6: %s\n", baru.gelang6);
}
int main()
{
int pilihan,x;
printf("pilih berapa gelang yang ingin dihitung\n");
printf("1. 4 gelang\n");
printf("2. 5 gelang\n");
printf("3. 6 gelang\n");
printf("masukkan nomor pilihan anda>");
scanf_s("%i", &pilihan);
switch(pilihan)
{
case 1:
int empat_gelang()
system("pause");
break;
case 2:
int 5gelang()
system("pause");
break;
case 3:
int 6gelang()
system("pause");
break;
default:
printf("menu pilihan tidak tersedia\n");
main();
}
int kerja()
{
int a, b, c, g, z, gel[3]; //pendeklarasian variabel
dan array bertipe integer
double g1,g2,x,y; //pendeklarasian veriabel
bertipe double
printf(“PROGRAM MENGHITUNG NILAI SUATU RESISTOR DENGAN MEMBACA GELANG WARNANYA\n”);
printf(“[0] Hitam\n[1] Coklat\n[2] Merah\n[3] jingga\n[4] Kuning\n[5] Hijau\n”);
printf(“[6] Biru\n[7] Ungu\n[8] Abu-Abu\n[9] Putih\n”);
printf(“[10] Emas\n[11] Perak\n[12] Tak Berwarna\n\n”);
printf(“nb: ketik angka/hurufnya saja!\n\n”);
for (g=0;g<=3;g++) //perulangan untuk menginput warna gelang
{
printf(“Ketikkan warna gelang ke-%d : “, g+1);
scanf(“%d”,&gel[g]); //dibaca dan dimasukkan kedalam array gel[]
}
switch (gel[0]) //penyeleksian kondisi pada gelang pertama
{
case 0 : g1=0; break;
case 1 : g1=1; break;
case 2 : g1=2; break;
case 3 : g1=3; break;
case 4 : g1=4; break;
case 5 : g1=5; break;
case 6 : g1=6; break;
case 7 : g1=7; break;
case 8 : g1=8; break;
case 9 : g1=9; break;
default : {printf(“Masukan gelang pertama salah!\n”);}
}
switch (gel[1]) //penyeleksian kondisi pada gelang kedua
{
case 0 : g2=0; break;
case 1 : g2=1; break;
case 2 : g2=2; break;
case 3 : g2=3; break;
case 4 : g2=4; break;
case 5 : g2=5; break;
case 6 : g2=6; break;
case 7 : g2=7; break;
case 8 : g2=8; break;
case 9 : g2=9; break;
default : {printf(“Masukan gelang kedua salah!\n”);}
}
//pada bagian ini nilai resistor ditentukanberdasarkan warna gelang
switch (gel[2]) //penyeleksian kondisi pada gelang ketiga
{
case 0 : x=g1*(pow(10,1));y=g2*(pow
(10,0));break;
case 1 : x=g1*(pow(10,2));y=g2*(pow
(10,1));break;
case 2 : x=g1*(pow(10,3));y=g2*(pow
(10,2));break;
case 3 : x=g1*(pow(10,4));y=g2*(pow
(10,3));break;
case 4 : x=g1*(pow(10,5));y=g2*(pow
(10,4));break;
case 5 : x=g1*(pow(10,6));y=g2*(pow
(10,5));break;
case 6 : x=g1*(pow(10,7));y=g2*(pow
(10,6));break;
case 7 : x=g1*(pow(10,8));y=g2*(pow
(10,7));break;
case 8 : x=g1*(pow(10,9));y=g2*(pow
(10,8));break;
case 9 : x=g1*(pow(10,10));y=g2*(pow
(10,9));break;
case 10 : x=g1*(pow(10,0));y=g2*(pow
(10,-1));break;
default : {printf(“Masukan gelang ketiga salah!\n”);}
}
//penentuan nilai toleransi
switch (gel[3]) //penyeleksian kondisi pada gelang keempat
{
case 10 : z=5;break;
case 11 : z=10;break;
case 12 : z=20;break;
default : {}
}
if ((x<=0) || (y<=0) || (z<=0)) {salah();}//jika terjadi kesalahan dalam menginput, maka akan tampil pesan ini
else
{
hitungcetak(x, y, z); //pemanggilan fungsihitungcetak
}
}
int hitungcetak(double x,double y, double z) // fungsi untuk menghitung dan mencetak hasil
{
float res,tol, maks, min,w;//pendeklarasian veriabel bertipe float
res=x+y; //penghitungan nilai dengan menjumlahkan variabel x dan y
tol=z; //assigment pada variabel tol dengan nilai yang ada pada variabel z
maks=res+(tol/100*res); //penghitungan nilai maksimum
min=res-(tol/100*res); //penghitungan nilai minimum
getch();
}

